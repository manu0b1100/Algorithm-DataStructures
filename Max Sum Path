#include <bits/stdc++.h>
using namespace std;
struct Node 
{ 
    int data; 
    struct Node* left, *right; 
}; 
 
// A utility function to allocate a new node 
struct Node* newNode(int data) 
{ 
    struct Node* newNode = new Node; 
    newNode->data = data; 
    newNode->left = newNode->right = NULL; 
    return (newNode); 
} 
 
void inorder(Node *root){
	if(root==NULL){
		return;
	}
 
	inorder(root->left);
	cout<<root->data<<" ";
	inorder(root->right);
}
int globalMax=INT_MIN;
int findMaxPath(Node* root){
	if(root==NULL){
		return 0;
	}
 
	int left=findMaxPath(root->left);
	int right=findMaxPath(root->right);
	globalMax=max(globalMax, root->data+left+right);
 
	return root->data+max(left,right);
}
 
 
 
 
int main() {
 
	struct Node *root = newNode(10); 
    root->left        = newNode(2); 
    root->right       = newNode(10); 
    root->left->left  = newNode(20); 
    root->left->right = newNode(1); 
    root->right->right = newNode(-25); 
    root->right->right->left   = newNode(3); 
    root->right->right->right  = newNode(4); 
    //inorder(root);
    cout<<findMaxPath(root)<<endl;
    cout<<globalMax<<endl;
	// your code goes here
	return 0;
}
